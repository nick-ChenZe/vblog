[{"title":"关于我的前端","tag":["生活"],"date":"2016-07-20T22:20:00.000Z","cover":null,"id":"3147150484954545049","snapshot":"<p>不够尽力，所以后悔！</p>\n<p>犹记得高中时候，当老师调查我们是否对生活后悔，是否有想回到的时间节点，答案肯定是有的，而且还不少，但是落笔时我还是写了，“不后悔！我对我的过去负责。”巧合的是，和我一起的两个同党，答案和我所差不几，我们也成了唯三没有时间节点的男子。现在四年过去，一个哥们在常春藤读研，一个去了西班牙，而我成了“苦逼”的程序员。</p>\n<p>有一件事，在我这类人身上是的的确确存在的，就是我们即改变不了过去，</p>","next":{"title":"[译]A Few Thoughts: On Tyus Jones","id":"11550484954525053"}},{"title":"[译]A Few Thoughts: On Tyus Jones","date":"2016-05-24T18:32:49.000Z","tags":["NBA"],"categories":"翻译","id":"11550484954525053","snapshot":"<p>By Lucas Seehafer  @SeehaferNBA on May 6, 2016, 6:40a 608</p>\n<p>关于泰厄斯-琼斯的几点想法</p>\n<p>What, exactly, do the Minnesota Timberwolves have in rookie point guard Tyus Jones?</p>\n<p>森林狼到达想从泰厄斯-琼斯这名年轻的控卫身上得到什么？</p>\n<p>At this stage in</p>","next":{"title":"util模块","id":"2235950484954515055"}},{"title":"util模块","date":"2016-04-26T21:32:44.000Z","tags":null,"categories":"笔记","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/owl-158414_1280.png","id":"2235950484954515055","snapshot":"<h3>util.debuglog(section)</h3>\n<p>format日志信息，return一个函数，类似console.error</p>\n<pre class=\"hljs\" lang=js><code><span class=\"hljs-keyword\">const</span> util = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'util'</span>);\n<span class=\"hljs-keyword\">const</span> debuglog = util.debuglog(<span class=\"hljs-string\">'foo'</span>);\n\ndebuglog(<span class=\"hljs-string\">'hello from foo [%d]'</span>, <span class=\"hljs-number\">123</span>);\n<span class=\"hljs-comment\">//log: FOO 3245: hello from foo</span></code></pre>","prev":{"title":"[译]A Few Thoughts: On Tyus Jones","id":"11550484954525053"},"next":{"title":"利用getBoundingClientRect()实现图片LazyLoad","id":"10050484954515051"}},{"title":"利用getBoundingClientRect()实现图片LazyLoad","date":"2016-04-23T14:54:19.000Z","tags":["JavaScript"],"categories":"笔记","id":"10050484954515051","snapshot":"<h2>引言</h2>\n<p>在前端设计中，由于网页短时间内可提供的资源有限，尤其是移动端，为了让用户不必为了未知的页面内容等待太久，资源的有序加载是一种优化性能的手段，即只留下唯一的，不可替代的。</p>\n<h2>核心</h2>\n<h3>方法：getBoundingClientRect</h3>\n<p>getBoundingClientRect()是Dom节点的方法，返回一个元素的大小及其相对于视口的位置,返回值是一个DOMRect对象。如图所示。</p>\n<h3>思想</h3>\n<p>当图片进入视</p>","prev":{"title":"util模块","id":"2235950484954515055"},"next":{"title":"利用css的attr属性制作小tips","id":"11550484954515051"}},{"title":"利用css的attr属性制作小tips","date":"2016-04-23T14:26:19.000Z","tags":["CSS"],"categories":"笔记","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/owl-158414_1280.png","id":"11550484954515051","snapshot":"<p><code>attr()</code>是CSS3中的计算属性，类似于<code>calc()</code>,还有<code>toggle()</code>。现在浏览器支持在content属性中使用<code>attr()</code>。想像下，如果可以在<code>margin</code>里室友这个属性，在<code>html</code>标签内写类似<code>data-marginLeft:&quot;20px&quot;</code>，是不是很像传说中的原子类，和相比写在CSS中有什么优点呢？见仁见智，这篇笔记主要记录如何用<code>attr()</code>属性制作类似对话框的小tips。</p>","prev":{"title":"利用getBoundingClientRect()实现图片LazyLoad","id":"10050484954515051"},"next":{"title":"[译]那些你早就应该知道关于JavaScript作用域（scope）的事","id":"2010750484954514956"}},{"title":"[译]那些你早就应该知道关于JavaScript作用域（scope）的事","date":"2016-04-17T23:12:19.000Z","tags":["JavaScript","闭包","作用域"],"categories":"翻译","banner":"http://i.niupic.com/images/2016/04/20/WZpXaW.jpg","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/quill-175980_1280.png","id":"2010750484954514956","snapshot":"<h2>引言</h2>\n<blockquote>\n<p>原文地址：https://spin.atomicobject.com/2014/10/20/javascript-scope-closures</p>\n<p>原文标题：What You Should Already Know about JavaScript Scope</p>\n<p>译者注：术语在第一次使用时会在括号内备注</p>\n</blockquote>\n<p>如果你是一个JavaScript菜鸟，或者说你已经为了给你的网站添加几个动画效果被JQue</p>","prev":{"title":"利用css的attr属性制作小tips","id":"11550484954515051"},"next":{"title":"mac启动apache及更改配置路径","id":"2445250484954514955"}},{"title":"mac启动apache及更改配置路径","date":"2016-04-16T21:32:44.000Z","tags":null,"categories":"笔记","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/owl-158414_1280.png","id":"2445250484954514955","snapshot":"<blockquote>\n<p>apache配置方法网上很多，也很简单，这里主要是针对2.3+版本更改根路径踩的坑做个记录</p>\n</blockquote>\n <!--more-->\n<p><a href=\"http://www.cnblogs.com/snandy/archive/2012/11/13/2765381.html\">参考链接</a></p>\n<p>Mac下apache是默认开启的，根路径是<code>/Library/WebServer/Documents/</code>，你也可以通过命令重启</p>\n<pre class=\"hljs\" lang=bash><code>sudo apachectl restart\n</code></pre>\n<p>启动虚拟主机配置，在<code>/etc/apache2/httpd.conf</code>将下面这行取消注释</p>\n<pre class=\"hljs\" lang=bash><code><span class=\"hljs-comment\">#Include /privat</span></code></pre></!--more-->","prev":{"title":"[译]那些你早就应该知道关于JavaScript作用域（scope）的事","id":"2010750484954514956"},"next":{"title":"css3中的滤镜","id":"3823650484954514954"}},{"title":"css3中的滤镜","date":"2016-04-15T20:14:12.000Z","tags":null,"categories":"笔记","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/owl-158414_1280.png","id":"3823650484954514954","snapshot":"<h2>filter样式</h2>\n<p>在旧版本的IE浏览器中，我们会使用<code>filter</code>滤镜，创建一些诸如渐变的效果。在CSS3中filter有了更多用处，不同于基础CSS样式，滤镜元素会使浏览器提供硬件加速，提高渲染速度，而且现在主流器的支持度都不错,适应于几乎所有类型的元素，包括SVG及CSS动画。</p>\n <!--more-->\n<p><img src=\"http://7xt64w.com2.z0.glb.clouddn.com/BD38EBD4-18D5-493A-940A-9DA1DB9D366F.png\" alt=\"Support filter\"></p>\n<h3>参数</h3>\n<blockquote>\n<p><strong>filter</strong>: &lt; filter-function &gt; [&lt; filter-funct</p></blockquote></p></!--more-->","prev":{"title":"mac启动apache及更改配置路径","id":"2445250484954514955"},"next":{"title":"Permission denied解决办法","id":"2786150484954514953"}},{"title":"Permission denied解决办法","date":"2016-04-14T21:12:39.000Z","tags":["github"],"categories":"笔记","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/owl-158414_1280.png","id":"2786150484954514953","snapshot":"<h2>连接Git时，Permission denied解决办法</h2>\n<p><code>ssh-add -l</code>命令查看秘钥是否为空，若为空则生成的秘钥未被添加的连接队列中。</p>\n<pre class=\"hljs\" lang=bash><code>ssh-add ~/.ssh/[keyname]\n</code></pre>\n<p><code>[keyname]</code>为你的秘钥名称，使用<code>ls ~/.ssh/</code>命令查看，添加完后再次查看，发现RSA秘钥已经被添加成功了。重新连接即可。</p>\n<pre class=\"hljs\"><code>ssh -T git@github.com\n</code></pre>\n <!--more-->\n</!--more-->","prev":{"title":"css3中的滤镜","id":"3823650484954514954"},"next":{"title":"ES6笔记(中）","id":"65289504849545150"}},{"title":"ES6笔记(中）","date":"2016-04-02T15:17:19.000Z","tags":["ES6"],"categories":"笔记","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/owl-158414_1280.png","id":"65289504849545150","snapshot":"<h2>二进制数组</h2>\n<h3>概念</h3>\n<p>二进制数组内容<code>ArrayBuffer</code>，通过<code>TypeArray</code>和<code>DataView</code>两个对象接口来读写。</p>\n <!--more-->\n<table>\n<thead>\n<tr>\n<th>数组类型</th>\n<th>含义</th>\n<th>字节长度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Int8</code></td>\n<td>8位带符号整数</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>Int16</code></td>\n<td>8位带符号整数</td>\n<td>2</td>\n</tr>\n<tr>\n<td><code>Int32</code></td>\n<td>8位带符号整数</td>\n<td>4</td>\n</tr>\n<tr>\n<td><code>Uint8</code></td>\n<td>8位带符号整数</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>Uint8C</code></td>\n<td>8位带符号整数</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>Uint16</code></td>\n<td>8位带符号整数</td>\n<td>2</td>\n</tr>\n<tr>\n<td><code>UInt32</code></td>\n<td>8位带</td></tr></tbody></table></!--more-->","prev":{"title":"Permission denied解决办法","id":"2786150484954514953"},"next":{"title":"ES6笔记(上）","id":"6528950484954504954"}},{"title":"ES6笔记(上）","date":"2016-03-15T20:20:19.000Z","tags":["ES6"],"categories":"笔记","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/owl-158414_1280.png","id":"6528950484954504954","snapshot":"<h2>没关系的引导语</h2>\n<blockquote>\n<p>Zach LaVine: &quot;You're always going to remember. It's never going to fade. Time is a little bit like scars. There's still a little bit of the scar.&quot;</p>\n</blockquote>\n <!--more-->\n<h2>笔记</h2>\n<h3>let块级声明</h3>\n<ol>\n<li>与<code>var</code>不同，不存在变量提升。</li>\n<li>高于全</li></ol></!--more-->","prev":{"title":"ES6笔记(中）","id":"65289504849545150"},"next":{"title":"AngularJS入门笔记（三）","id":"6528950484954495057"}},{"title":"AngularJS入门笔记（三）","date":"2016-02-28T21:52:19.000Z","tags":["AngularJS"],"categories":"笔记","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/owl-158414_1280.png","id":"6528950484954495057","snapshot":"<h2>没关系的引导语</h2>\n<p>动态语言和静态语言的区别？</p>\n<blockquote>\n<p>Static typing when possible, dynamic typing when needed。</p>\n</blockquote>\n<p>动态类型语言：动态类型语言是指在运行期间才去做数据类型检查的语言，也就是说，在用动态类型的语言编程时，永远也不用给任何变量指定数据类型，该语言会在你第一次赋值给变量时，在内部将数据类型记录下来。Python和Ruby就是一种典型的动态类型</p>","prev":{"title":"ES6笔记(上）","id":"6528950484954504954"},"next":{"title":"AngularJS入门笔记（二）","id":"65289504849544950"}},{"title":"AngularJS入门笔记（二）","date":"2016-02-01T20:52:10.000Z","tags":["AngularJS"],"categories":"笔记","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/owl-158414_1280.png","id":"65289504849544950","snapshot":"<h2>没关系的引导语</h2>\n<p>为什么是ngApp而不是ngModule？</p>\n<blockquote>\n<p>Use this directive to auto-bootstrap an AngularJS application. The ngApp directive designates the root element of the application and is typically placed near the root e</p></blockquote>","prev":{"title":"AngularJS入门笔记（三）","id":"6528950484954495057"},"next":{"title":"AngularJS入门笔记（一）","id":"6528950484954485148"}},{"title":"AngularJS入门笔记（一）","date":"2016-01-29T21:52:19.000Z","tags":["AngularJS"],"categories":"笔记","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/owl-158414_1280.png","id":"6528950484954485148","snapshot":"<p>这周末开始，到年假过完，准备把angular1.4+版本和beta2版本先爬个坑，至于为什么嘛？当然是为了找工作了。然后还要抽点时间学点图像处理的算法和webGL，天啦噜的，我觉得自己真是太Native居然认为这任务做的完？废话到这里了，开始吧！</p>\n <!--more-->\n<h2>环境配置</h2>\n<p>因为自己想从简单的坑一点点踩过来所有没有安装官方的依赖包，只装了简单的主文件</p>\n<pre class=\"hljs\" lang=bash><code>npm install angular@1.4.9\n</code></pre>\n<p>如果喜</p></!--more-->","prev":{"title":"AngularJS入门笔记（二）","id":"65289504849544950"}},{"title":"Hexo搭建轻量级博客","date":"2016-01-24T18:32:49.000Z","tags":["hexo","blog","NexT"],"categories":"笔记","id":"2345850484954485053","snapshot":"<h2>准备工作</h2>\n<p>环境： <code>Mac OS X</code></p>\n<p>你需要预先安装：<code>NodeJS</code> <code>Git</code></p>\n<p>Mac用户可以使用Homebrew安装git</p>\n <!--more-->\n<p>首先安装Homebrew</p>\n<blockquote>\n<p>“Homebrew installs the stuff you need that Apple didn’t.\n——Homebrew 使 OS X 更完整”。</p>\n</blockquote>\n<p>bash下：</p>\n<pre class=\"hljs\" lang=bash><code>curl -LsSf http://github.com/mxcl/h</code></pre></!--more-->","prev":{"title":"AngularJS入门笔记（一）","id":"6528950484954485148"}}]