{"meta":{"title":"利用css的attr属性制作小tips","date":"2016-04-23T14:26:19.000Z","tags":["CSS"],"categories":"笔记","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/owl-158414_1280.png","id":"11550484954515051","prev":{"title":"利用getBoundingClientRect()实现图片LazyLoad","id":"10050484954515051"},"next":{"title":"[译]那些你早就应该知道关于JavaScript作用域（scope）的事","id":"2010750484954514956"}},"content":"<p><code>attr()</code>是CSS3中的计算属性，类似于<code>calc()</code>,还有<code>toggle()</code>。现在浏览器支持在content属性中使用<code>attr()</code>。想像下，如果可以在<code>margin</code>里室友这个属性，在<code>html</code>标签内写类似<code>data-marginLeft:&quot;20px&quot;</code>，是不是很像传说中的原子类，和相比写在CSS中有什么优点呢？见仁见智，这篇笔记主要记录如何用<code>attr()</code>属性制作类似对话框的小tips。</p>\n <!--more-->\n<p><img src=\"http://7xt64w.com2.z0.glb.clouddn.com/sh.gif\" alt=\"小tips注解\">\n当然你也可以添加相应的<code>transition</code>效果，让它看起来更友善。\n<a href=\"https://www.w3.org/TR/css3-values/#funcdef-attr\">参考链接</a></p>\n<blockquote>\n<p>语法: attr( attribute-name &lt; type-or-unit &gt;? [, &lt; fallback &gt; ]? )</p>\n</blockquote>\n<p><code>attr()</code>接受三个参数，第一个是传入的属性名称，第二是解析的类型或单位，第三个是回退的值，如果解析出错，<code>content</code>值会被计算成第三个参数，如果不存在，则为空。但是，<code>fallback</code>的值必须和第二参数指定的类型或参数一致，否则会使用默认值（不同类型的默认值不同，基本上为0或空）。</p>\n<p>在标签里除了要设置获取的<code>data</code>属性，还需要设置类或id让CSS取识别它。当然和样式相关的，最好避免使用id。最后如果要防止中文硬编码带来的问题，可以在js中传入属性，将<code>data-tips-type</code>设成变量。</p>\n<pre class=\"hljs\" lang=html><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"custom-tips\"</span> <span class=\"hljs-attr\">data-tips</span>=<span class=\"hljs-string\">\"this is a small tips!\"</span>&gt;</span>pop up<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n</code></pre>\n<p>我不喜欢在CSS中使用<code>opacity</code>属性。该隐藏的，就不要让它加载，还能提升性能（当然程度可以忽略不计）。</p>\n<pre class=\"hljs\" lang=css><code><span class=\"hljs-selector-class\">.custom-tips</span>{\n    <span class=\"hljs-attribute\">position</span>: relative;  \n}\n<span class=\"hljs-selector-class\">.custom-tips</span><span class=\"hljs-selector-pseudo\">:hover</span><span class=\"hljs-selector-pseudo\">:after</span>,\n<span class=\"hljs-selector-class\">.custom-tips</span><span class=\"hljs-selector-pseudo\">:hover</span><span class=\"hljs-selector-pseudo\">:before</span>{\n    <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">1</span>;\n}\n<span class=\"hljs-selector-class\">.custom-tips</span><span class=\"hljs-selector-pseudo\">:before</span>{\n    <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">attr</span>(data-tips) <span class=\"hljs-string\">\" \"</span>;\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">rgba</span>(0,0,0,0.9);\n    <span class=\"hljs-attribute\">white-space</span>: nowrap;\n    <span class=\"hljs-attribute\">position</span>: absolute;\n    <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">50%</span>;\n    <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">4px</span>;\n    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">12px</span>;\n    <span class=\"hljs-attribute\">padding</span>: .<span class=\"hljs-number\">5em</span> <span class=\"hljs-number\">1em</span>;\n    <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">20px</span>;\n    <span class=\"hljs-attribute\">pointer-events</span>: none;\n    <span class=\"hljs-attribute\">transition</span>: all <span class=\"hljs-number\">0.4s</span> ease-out;\n    <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(-50%, 10px);\n    <span class=\"hljs-attribute\">transform-origin</span>: top;\n}\n\n</code></pre>\n<p><img src=\"http://7xt64w.com2.z0.glb.clouddn.com/sh1.gif\" alt=\"简单的例子\"></p>\n<p>为了伪类能够更好的定位，父元素<code>position</code>属性最好是<code>relative</code>，否则就会很尴尬。<code>transform: translate(-50%, 10px);</code>配合<code>left: 50%;</code>是一个不错的水平居中的办法。</p>\n<p>最后我们加上三角形，使得整体更完整，你可以使用SVG或者base64的小图片，这里为了方便，我直接用border实现。完整代码如下：</p>\n<pre class=\"hljs\" lang=css><code><span class=\"hljs-selector-class\">.custom-tips</span>{\n    <span class=\"hljs-attribute\">position</span>: relative;\n}\n<span class=\"hljs-selector-class\">.custom-tips</span><span class=\"hljs-selector-pseudo\">:hover</span><span class=\"hljs-selector-pseudo\">:after</span>,\n<span class=\"hljs-selector-class\">.custom-tips</span><span class=\"hljs-selector-pseudo\">:hover</span><span class=\"hljs-selector-pseudo\">:before</span>{\n    <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">1</span>;\n}\n<span class=\"hljs-selector-class\">.custom-tips</span><span class=\"hljs-selector-pseudo\">:before</span>,\n<span class=\"hljs-selector-class\">.custom-tips</span><span class=\"hljs-selector-pseudo\">:after</span>{\n    <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">position</span>: absolute;\n    <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">50%</span>;\n    <span class=\"hljs-attribute\">transition</span>: all <span class=\"hljs-number\">0.4s</span> ease-out;\n    <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(-50%);\n    <span class=\"hljs-attribute\">transform-origin</span>: top;\n}\n<span class=\"hljs-selector-class\">.custom-tips</span><span class=\"hljs-selector-pseudo\">:before</span>{\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">attr</span>(data-tips) <span class=\"hljs-string\">\" \"</span>;\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">rgba</span>(0,0,0,0.9);\n    <span class=\"hljs-attribute\">white-space</span>: nowrap;\n    <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">4px</span>;\n    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">12px</span>;\n    <span class=\"hljs-attribute\">padding</span>: .<span class=\"hljs-number\">5em</span> <span class=\"hljs-number\">1em</span>;\n    <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">10px</span>;\n}\n<span class=\"hljs-selector-class\">.custom-tips</span><span class=\"hljs-selector-pseudo\">:after</span>{\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">''</span>;\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">border-left</span>: <span class=\"hljs-number\">6px</span> solid transparent;\n    <span class=\"hljs-attribute\">border-right</span>: <span class=\"hljs-number\">6px</span> solid transparent;\n    <span class=\"hljs-attribute\">border-bottom</span>: <span class=\"hljs-number\">6px</span> solid transparent;\n    <span class=\"hljs-attribute\">border-top</span>: <span class=\"hljs-number\">6px</span> solid <span class=\"hljs-built_in\">rgba</span>(0,0,0,0.9);\n    <span class=\"hljs-attribute\">margin-bottom</span>: -<span class=\"hljs-number\">2px</span>;\n\n}\n</code></pre>\n<p><img src=\"http://7xt64w.com2.z0.glb.clouddn.com/sh2.gif\" alt=\"最后实现结果\"></p>\n<blockquote>\n<p>因为伪类唯一，所以如果目标元素已经存在<code>:before</code>或者<code>:afer</code>伪类，则会发生冲突。同样的，还有不适用伪类的元素入<code>&lt; hr &gt;</code>等。</p>\n</blockquote>\n<p>最后本文灵感与<a href=\"http://kazzkiq.github.io/balloon.css/\">balloon.css</a>相同，大家有兴趣，可以试下这个。</p>\n"}