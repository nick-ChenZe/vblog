{"meta":{"title":"Angular入门笔记（二）","date":"2016-02-01T20:52:10.000Z","tags":["AngularJS"],"categories":"笔记","thumbnail":"http://7xt64w.com2.z0.glb.clouddn.com/owl-158414_1280.png","id":2},"content":"<h2>没关系的引导语</h2>\n<p>为什么是ngApp而不是ngModule？</p>\n<blockquote>\n<p>Use this directive to auto-bootstrap an AngularJS application. The ngApp directive designates the root element of the application and is typically placed near the root element of the page - e.g. on the or tags.\n用这个指令去自动引导一个AngularJS应用。<code>ngApp</code>这个指令经常会被放在页面根元素附近，用来划定应用根元素的作用范围，例如<code>html</code>？\nOnly one AngularJS application can be auto-bootstrapped per HTML document. The first ngApp found in the document will be used to define the root element to auto-bootstrap as an application. To run multiple applications in an HTML document you must manually bootstrap them using angular.bootstrap instead. AngularJS applications cannot be nested within each other.\n只有一个AngularJS应用能够用来引导每个HTML文档。在文档中发现的第一个<code>ngApp</code> 被用来定义一个作为应用程序边界的根元素。如果你想要在一个HTML中运行多个应用程序就必须手动引导它们去使用<code>Angular.bootstrap</code>来代替<code>ngaApp</code>的作用。AngularJS应用们不能互相嵌套。</p>\n</blockquote>\n <!--more-->\n<p><a href=\"https://docs.angularjs.org/api/ng/directive/ngApp\">链接</a></p>\n<h2>Step2</h2>\n<h3>循环输出</h3>\n<p>使用过其他模版机制，所以对这个比较熟悉。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">ng-repeat</span>=<span class=\"hljs-string\">\"apple in apples | filter:query | orderBy: orderProp\"</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>{{apple.id}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>{{apple.num}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n</code></pre>\n<p><code>apples</code>即为需要循环的数组，而<code>apple</code>是你自己定义的循环中的子集，它的意义是统筹数组中每个对象的属性。</p>\n<h3>筛选过滤</h3>\n<p><code>｜</code>管道符号分隔过滤器，AngularJS自带下列的过滤功能，你也可以自己定义（下次再记）</p>\n<pre class=\"hljs\"><code>  register(<span class=\"hljs-string\">'currency'</span>, currencyFilter);\n  register(<span class=\"hljs-string\">'date'</span>, dateFilter);\n  register(<span class=\"hljs-string\">'filter'</span>, filterFilter);\n  register(<span class=\"hljs-string\">'json'</span>, jsonFilter);\n  register(<span class=\"hljs-string\">'limitTo'</span>, limitToFilter);\n  register(<span class=\"hljs-string\">'lowercase'</span>, lowercaseFilter);\n  register(<span class=\"hljs-string\">'number'</span>, numberFilter);\n  register(<span class=\"hljs-string\">'orderBy'</span>, orderByFilter);\n  register(<span class=\"hljs-string\">'uppercase'</span>, uppercaseFilter);\n</code></pre>\n<p>这里我们只用到了<code>query</code>和<code>orderBy</code>，前者是查询过滤即你可以绑定过查询输入框，像这样</p>\n<pre class=\"hljs\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"query\"</span>&gt;</span>\n</code></pre>\n<p>后者是排序你可以以任意方式给其传递关键词</p>\n<pre class=\"hljs\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">ng-model</span>=<span class=\"hljs-string\">\"orderProp\"</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"id\"</span>&gt;</span>id<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"num\"</span>&gt;</span>num<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span>\n</code></pre>\n"}